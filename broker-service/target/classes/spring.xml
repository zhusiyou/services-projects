<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"

       default-autowire="byName">

    <mvc:annotation-driven />
    <aop:aspectj-autoproxy />
    <context:component-scan base-package="live.betterman" />
    <!--<tx:annotation-driven />-->
    <!--<import resource="classpath:dubbo.xml" />-->

    <!-- 属性文件读入 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:properties/jdbc.properties</value>
                <value>classpath*:properties/hibernate.properties</value>
            </list>
        </property>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--包扫描,数据库对应的实体类所在的包-->
        <property name="packagesToScan" value="live.betterman.core.entity" />
        <property name="hibernateProperties">
            <value>
                <!-- hibernate使用的数据库方言(即连接哪种数据库) -->
                hibernate.dialect = org.hibernate.dialect.OracleDialect
                <!-- hibernate批量插入，删除和更新时每次操作的记录数 -->
                hibernate.jdbc.batch_size = 50
                <!-- 允许被缓存的JDBC连接开启自动提交 -->
                hibernate.connection.autocommit = true
                <!-- 自动更新数据库表结构 -->
                hibernate.hbm2ddl.auto = update
                <!-- 后台显示sql语句，开发时使用-->
                hibernate.show_sql = true
                <!-- 连接数据库时是否使用数据库编码 -->
                hibernate.connection.useUnicode = true
                <!-- 连接数据库时数据的传输字符集编码方式 -->
                hibernate.connection.characterEncoding = UTF-8
                <!-- 启用查询缓存，程序中须手动操作 -->
                hibernate.cache.use_query_cache = false
                hibernate.cache.use_second_level_cache = false
            </value>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath*:hibernate/*.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!-- 数据源定义连接池 -->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="idleConnectionTestPeriod" value="30"/>
        <property name="idleMaxAge" value="60"/>
        <property name="maxConnectionsPerPartition" value="5"/>
        <property name="minConnectionsPerPartition" value="1"/>
        <property name="partitionCount" value="1"/>
        <property name="acquireIncrement" value="1"/>
        <property name="statementsCacheSize" value="10"/>
        <property name="releaseHelperThreads" value="3"/>
        <property name="statementReleaseHelperThreads" value="10"/>
        <property name="lazyInit" value="true"/>
    </bean>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置事务通知属性 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <!-- 定义事务传播属性 -->
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="set*" propagation="REQUIRED"/>
            <tx:method name="execute*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="search*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切面 -->
    <aop:config>
        <aop:advisor pointcut="execution(* live.betterman.broker.dao.*.*(..))" advice-ref="transactionAdvice"/>
    </aop:config>


</beans>